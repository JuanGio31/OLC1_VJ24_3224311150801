package org.example.view;

import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.io.File;
import javax.swing.JComponent;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author giovanic
 */
public class Tab extends javax.swing.JPanel {

    private File archivo;

    /**
     * Creates new form Tab
     *
     * @param archivo archivo que contentra el panel
     */
    public Tab(File archivo) {
        initComponents();
        this.archivo = archivo;

        jScrollPane1.setRowHeaderView(new LineNumberView(vistaContenido));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vistaContenido = new javax.swing.JTextArea();

        vistaContenido.setColumns(20);
        vistaContenido.setRows(5);
        jScrollPane1.setViewportView(vistaContenido);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void editarVista(String contenido) {
        vistaContenido.setText(contenido);
    }

    public File getArchivo() {
        return archivo;
    }

    public void setArchivo(File archivo) {
        this.archivo = archivo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea vistaContenido;
    // End of variables declaration//GEN-END:variables
}

class LineNumberView extends JComponent {

    private final JTextArea textArea;

    public LineNumberView(JTextArea textArea) {
        this.textArea = textArea;
        textArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                repaint();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                repaint();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                repaint();
            }
        });
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        FontMetrics fontMetrics = textArea.getFontMetrics(textArea.getFont());
        int lineHeight = fontMetrics.getHeight();
        int startY = 0;

        String text = textArea.getText();
        String[] lines = text.split("\n");

        for (int i = 0; i < lines.length; i++) {
            g.drawString(String.valueOf(i + 1), 0, startY + fontMetrics.getAscent());
            startY += lineHeight;
        }
    }
 
    @Override
    public Dimension getPreferredSize() {
        FontMetrics fontMetrics = textArea.getFontMetrics(textArea.getFont());
        int width = fontMetrics.stringWidth(String.valueOf(textArea.getLineCount())) + 5;
        int height = textArea.getHeight();
        return new Dimension(width, height);
    }
}
